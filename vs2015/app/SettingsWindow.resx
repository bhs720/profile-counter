<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YII=
</value>
  </data>
</root>